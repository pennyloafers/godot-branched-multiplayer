[gd_scene load_steps=2 format=3 uid="uid://b7m6e1s40hn4w"]

[sub_resource type="GDScript" id="GDScript_mi5qy"]
resource_name = "track"
script/source = "@tool
extends Node3D
@export var number_of_markers : int = 100
@export var marker_spacing : float = 100.0
@export var offset : float = 5.0


func _ready() -> void:
	for marker_number in number_of_markers:
		var pos = Vector3.MODEL_FRONT * (marker_spacing * marker_number) 
		pos += Vector3.LEFT * offset
		create_marker(pos)
		if marker_number > 0:
			create_obsticle(pos)
			pass

func create_marker(pos:Vector3):
	var marker = MeshInstance3D.new()
	marker.mesh = SphereMesh.new()
	marker.position = pos
	add_child(marker)

func create_obsticle(pos:Vector3):
	var ob = Obst.create()
	ob.position = pos
	add_child(ob)
"

[node name="Track" type="Node3D"]
script = SubResource("GDScript_mi5qy")
marker_spacing = 10.0
offset = 10.0
